import Header from "./components/Header";

import initialEmails from "./data/emails";

import "./App.css";
import { useState } from "react";
import emails from "./data/emails";

type Email = {
  id:number,
    sender: string,
    title: string,
    starred: boolean,
    read: boolean
}

// UdhÃ«zimet
// - Vendosni gjendjen duke pÃ«rdorur useState dhe fillestare Emails
// - Paraqisni njÃ« listÃ« emailesh nga shteti nÃ« mÃ«nyrÃ« qÃ« tÃ« duket e ngjashme me pamjen e ekranit
// - Krijo njÃ« funksion toggleRead qÃ« pÃ«rditÃ«son veÃ§orinÃ« e leximit tÃ« emailit tÃ« synuar nÃ« gjendje, kur njÃ« pÃ«rdorues klikon nÃ« kutinÃ« e kontrollit
// - Krijo njÃ« funksion toggleStar qÃ« pÃ«rditÃ«son pronÃ«n e shÃ«nuar me yll tÃ« emailit tÃ« synuar nÃ« gjendje, kur njÃ« pÃ«rdorues klikon nÃ« yllin
// - Sigurohuni qÃ« kÃ«to ndryshime tÃ« hyjnÃ« nÃ« fuqi nÃ« ndÃ«rfaqen e pÃ«rdoruesit

// - Nuk mund ta besoj se duhet ta them kÃ«tÃ«, por sigurohuni qÃ« aplikacioni juaj tÃ« funksionojÃ« dhe nÃ«se nuk mund ta bÃ«ni atÃ« tÃ« funksionojÃ«, dÃ«rgoni njÃ« mesazh nÃ« #mbÃ«shtetje ğŸ™ˆ ğŸ™ˆ ğŸ™ˆ ğŸ™ˆ ğŸ™ˆ

// KÃ«shilla
// - Injoro komponentin Header pÃ«r momentin
// - Mund tÃ« pÃ«rdorni CSS nÃ« app.css pÃ«r tÃ« ndihmuar nÃ« stilimin e listÃ«s suaj tÃ« emaileve ose pÃ«r tÃ« krijuar stilet tuaja
// - Array.map Ã«shtÃ« njÃ« metodÃ« e dobishme pÃ«r paraqitjen e listave dhe modifikimin e gjendjes
// - Mos harroni tÃ« pÃ«rdorni atributin kyÃ§ kur jepni listat nÃ« react

// Sfida 1
// - Merrni kutinÃ« e kontrollit Hide Read pÃ«r tÃ« funksionuar nÃ« seksionin e menysÃ« sÃ« majtÃ«. Do t'ju duhet tÃ« pÃ«rdorni gjendjen pÃ«r tÃ« mbajtur gjurmÃ«t e ndryshimeve dhe do t'ju duhet njÃ« funksion pÃ«r tÃ« filtruar emailet pÃ«rpara se ato tÃ« jepen, p.sh. getReadEmails (email)

// Sfida 2
// - Merrni kutinÃ« hyrÃ«se tÃ« menysÃ« sÃ« majtÃ« dhe artikujt e menysÃ« me yll qÃ« tÃ« funksionojnÃ« kur klikoni. Do t'ju duhet tÃ« pÃ«rdorni gjendjen pÃ«r tÃ« mbajtur gjurmÃ«t e ndryshimeve, p.sh. aktualTab dhe do t'ju duhet njÃ« funksion pÃ«r tÃ« filtruar emailet pÃ«rpara se tÃ« jepen, p.sh. getStarredEmails(email)

// Sfida 3
// - ZÃ«vendÃ«soni pikÃ«pyetjet e koduara nÃ« menynÃ« e majtÃ«

function App() {
  // Use initialEmails for state
  const [emails, setEmails] = useState(initialEmails)
  console.log(initialEmails);

  function toggleRead(email: Email) {
  const emailsCopy = structuredClone(emails)

  const targetEmail = emailsCopy.find(target => target.id === email.id)
    targetEmail.read = !targetEmail.read

    setEmails(emailsCopy)
  }

  function toggleStarred(email: Email) {
    const emailsCopy = structuredClone(emails)

    const targetEmail = emailsCopy.find(target => target.id === email.id)
      targetEmail.starred = !targetEmail.starred
  
      setEmails(emailsCopy)
  }

  return (
    <div className="app">
      <Header />
      <nav className="left-menu">
        <ul className="inbox-list">
          <li
            className="item active"
            // onClick={() => {}}
          >
            <span className="label">Inbox</span>
            <span className="count">?</span>
          </li>
          <li
            className="item"
            // onClick={() => {}}
          >
            <span className="label">Starred</span>
            <span className="count">?</span>
          </li>

          <li className="item toggle">
            <label htmlFor="hide-read">Hide read</label>
            <input
              id="hide-read"
              type="checkbox"
              checked={false}
              // onChange={() => {}}
            />
          </li>
        </ul>
      </nav>
      <main className="emails">{emails.map(item => 
      <li className="elements">
        <input id="hide-read" type="checkbox"></input>
        
        <span className="sender">{item.sender}</span>
        <span className="title">{item.title}</span>
        </li>)}
        </main>
    </div>
  );
}

export default App;
